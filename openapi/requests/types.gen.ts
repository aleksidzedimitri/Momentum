// This file is auto-generated by @hey-api/openapi-ts

/**
 * The content type that the client can understand.
 */
export type ParameterAcceptHeader = string;

export type GetStatusesData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
};

export type GetStatusesResponse = Array<{
    id?: number;
    name?: string;
    icon?: string;
}>;

export type GetPrioritiesData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
};

export type GetPrioritiesResponse = Array<{
    id?: number;
    name?: string;
    icon?: string;
}>;

export type GetDepartmentsData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
};

export type GetDepartmentsResponse = Array<{
    id?: number;
    name?: string;
}>;

export type GetEmployeesData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
};

export type GetEmployeesResponse = Array<{
    id?: number;
    name?: string;
    surname?: string;
    avatar?: string;
    department_id?: number;
}>;

export type PostEmployeesData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
    formData: {
        name?: string;
        surname?: string;
        avatar?: (Blob | File);
        department_id?: number;
    };
};

export type PostEmployeesResponse = {
    name?: string;
    surname?: string;
    avatar?: (Blob | File);
    department_id?: number;
};

export type GetTasksByTaskCommentsData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
    task: number;
};

export type GetTasksByTaskCommentsResponse = Array<{
    id?: number;
    text?: string;
    task_id?: number;
    /**
     * ID of the parent comment, if it's not provided it will be counted as main comment
     */
    parent_id?: number | null;
    author_avatar?: string;
    author_nickname?: string;
    sub_comments?: Array<{
        id?: number;
        text?: string;
        task_id?: number;
        parent_id?: number;
        author_avatar?: string;
        author_nickname?: string;
    }>;
}>;

export type PostTasksByTaskCommentsData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
    requestBody: {
        text?: string;
        parent_id?: integer_null;
    };
    task: number;
};

export type PostTasksByTaskCommentsResponse = {
    id?: number;
    text?: string;
    task_id?: number;
    parent_id?: integer_null;
};

export type GetTasksData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
};

export type GetTasksResponse = Array<{
    id?: number;
    name?: string;
    description?: string;
    due_date?: number;
    status?: {
        id?: number;
        name?: string;
    };
    priority?: {
        id?: number;
        name?: string;
        icon?: string;
    };
    department?: {
        id?: number;
        name?: string;
    };
    employee?: {
        id?: number;
        name?: string;
        surname?: string;
        avatar?: string;
        department_id?: number;
    };
}>;

export type PostTasksData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
    requestBody: {
        name?: string;
        description?: string;
        due_date?: string;
        status_id?: number;
        employee_id?: number;
        priority_id?: number;
    };
};

export type PostTasksResponse = Array<{
    id?: number;
    name?: string;
    description?: string;
    due_date?: number;
    status?: {
        id?: number;
        name?: string;
    };
    priority?: {
        id?: number;
        name?: string;
        icon?: string;
    };
    department?: {
        id?: number;
        name?: string;
    };
    employee?: {
        id?: number;
        name?: string;
        surname?: string;
        avatar?: string;
        department_id?: number;
    };
}>;

export type GetTasksByIdData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
    id: number;
};

export type GetTasksByIdResponse = {
    id?: number;
    name?: string;
    description?: string;
    due_date?: number;
    status?: {
        id?: number;
        name?: string;
    };
    priority?: {
        id?: number;
        name?: string;
        icon?: string;
    };
    department?: {
        id?: number;
        name?: string;
    };
    employee?: {
        id?: number;
        name?: string;
        surname?: string;
        avatar?: string;
        department_id?: number;
    };
};

export type PutTasksByIdData = {
    /**
     * The content type that the client can understand.
     */
    accept: string;
    id: number;
    requestBody: {
        status_id?: number;
    };
};

export type PutTasksByIdResponse = {
    id?: number;
    name?: string;
    description?: string;
    due_date?: number;
    status?: {
        id?: number;
        name?: string;
    };
    priority?: {
        id?: number;
        name?: string;
        icon?: string;
    };
    department?: {
        id?: number;
        name?: string;
    };
    employee?: {
        id?: number;
        name?: string;
        surname?: string;
        avatar?: string;
        department_id?: number;
    };
};

export type $OpenApiTs = {
    '/statuses': {
        get: {
            req: GetStatusesData;
            res: {
                /**
                 * A list of statuses
                 */
                200: Array<{
                    id?: number;
                    name?: string;
                    icon?: string;
                }>;
            };
        };
    };
    '/priorities': {
        get: {
            req: GetPrioritiesData;
            res: {
                /**
                 * A list of priorities
                 */
                200: Array<{
                    id?: number;
                    name?: string;
                    icon?: string;
                }>;
            };
        };
    };
    '/departments': {
        get: {
            req: GetDepartmentsData;
            res: {
                /**
                 * A list of departments
                 */
                200: Array<{
                    id?: number;
                    name?: string;
                }>;
            };
        };
    };
    '/employees': {
        get: {
            req: GetEmployeesData;
            res: {
                /**
                 * A list of employees
                 */
                200: Array<{
                    id?: number;
                    name?: string;
                    surname?: string;
                    avatar?: string;
                    department_id?: number;
                }>;
            };
        };
        post: {
            req: PostEmployeesData;
            res: {
                /**
                 * Employee created
                 */
                201: {
                    name?: string;
                    surname?: string;
                    avatar?: (Blob | File);
                    department_id?: number;
                };
            };
        };
    };
    '/tasks/{task}/comments': {
        get: {
            req: GetTasksByTaskCommentsData;
            res: {
                /**
                 * A list of comments
                 */
                200: Array<{
                    id?: number;
                    text?: string;
                    task_id?: number;
                    /**
                     * ID of the parent comment, if it's not provided it will be counted as main comment
                     */
                    parent_id?: number | null;
                    author_avatar?: string;
                    author_nickname?: string;
                    sub_comments?: Array<{
                        id?: number;
                        text?: string;
                        task_id?: number;
                        parent_id?: number;
                        author_avatar?: string;
                        author_nickname?: string;
                    }>;
                }>;
            };
        };
        post: {
            req: PostTasksByTaskCommentsData;
            res: {
                /**
                 * Comment created
                 */
                201: {
                    id?: number;
                    text?: string;
                    task_id?: number;
                    parent_id?: integer_null;
                };
            };
        };
    };
    '/tasks': {
        get: {
            req: GetTasksData;
            res: {
                /**
                 * A list of tasks
                 */
                200: Array<{
                    id?: number;
                    name?: string;
                    description?: string;
                    due_date?: number;
                    status?: {
                        id?: number;
                        name?: string;
                    };
                    priority?: {
                        id?: number;
                        name?: string;
                        icon?: string;
                    };
                    department?: {
                        id?: number;
                        name?: string;
                    };
                    employee?: {
                        id?: number;
                        name?: string;
                        surname?: string;
                        avatar?: string;
                        department_id?: number;
                    };
                }>;
            };
        };
        post: {
            req: PostTasksData;
            res: {
                /**
                 * New task created
                 */
                201: Array<{
                    id?: number;
                    name?: string;
                    description?: string;
                    due_date?: number;
                    status?: {
                        id?: number;
                        name?: string;
                    };
                    priority?: {
                        id?: number;
                        name?: string;
                        icon?: string;
                    };
                    department?: {
                        id?: number;
                        name?: string;
                    };
                    employee?: {
                        id?: number;
                        name?: string;
                        surname?: string;
                        avatar?: string;
                        department_id?: number;
                    };
                }>;
            };
        };
    };
    '/tasks/{id}': {
        get: {
            req: GetTasksByIdData;
            res: {
                /**
                 * detailed information about task
                 */
                200: {
                    id?: number;
                    name?: string;
                    description?: string;
                    due_date?: number;
                    status?: {
                        id?: number;
                        name?: string;
                    };
                    priority?: {
                        id?: number;
                        name?: string;
                        icon?: string;
                    };
                    department?: {
                        id?: number;
                        name?: string;
                    };
                    employee?: {
                        id?: number;
                        name?: string;
                        surname?: string;
                        avatar?: string;
                        department_id?: number;
                    };
                };
            };
        };
        put: {
            req: PutTasksByIdData;
            res: {
                /**
                 * update status of task
                 */
                200: {
                    id?: number;
                    name?: string;
                    description?: string;
                    due_date?: number;
                    status?: {
                        id?: number;
                        name?: string;
                    };
                    priority?: {
                        id?: number;
                        name?: string;
                        icon?: string;
                    };
                    department?: {
                        id?: number;
                        name?: string;
                    };
                    employee?: {
                        id?: number;
                        name?: string;
                        surname?: string;
                        avatar?: string;
                        department_id?: number;
                    };
                };
            };
        };
    };
};