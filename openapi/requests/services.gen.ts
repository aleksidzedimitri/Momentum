// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetStatusesData, GetStatusesResponse, GetPrioritiesData, GetPrioritiesResponse, GetDepartmentsData, GetDepartmentsResponse, GetEmployeesData, GetEmployeesResponse, PostEmployeesData, PostEmployeesResponse, GetTasksByTaskCommentsData, GetTasksByTaskCommentsResponse, PostTasksByTaskCommentsData, PostTasksByTaskCommentsResponse, GetTasksData, GetTasksResponse, PostTasksData, PostTasksResponse, GetTasksByIdData, GetTasksByIdResponse, PutTasksByIdData, PutTasksByIdResponse } from './types.gen';

export class StatusesService {
    /**
     * Get all statuses
     * @param data The data for the request.
     * @param data.accept The content type that the client can understand.
     * @returns unknown A list of statuses
     * @throws ApiError
     */
    public static getStatuses(data: GetStatusesData): CancelablePromise<GetStatusesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/statuses',
            headers: {
                Accept: data.accept
            }
        });
    }
    
}

export class PrioritiesService {
    /**
     * Get all priorities
     * @param data The data for the request.
     * @param data.accept The content type that the client can understand.
     * @returns unknown A list of priorities
     * @throws ApiError
     */
    public static getPriorities(data: GetPrioritiesData): CancelablePromise<GetPrioritiesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/priorities',
            headers: {
                Accept: data.accept
            }
        });
    }
    
}

export class DepartmentsService {
    /**
     * Get all departments
     * @param data The data for the request.
     * @param data.accept The content type that the client can understand.
     * @returns unknown A list of departments
     * @throws ApiError
     */
    public static getDepartments(data: GetDepartmentsData): CancelablePromise<GetDepartmentsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/departments',
            headers: {
                Accept: data.accept
            }
        });
    }
    
}

export class EmployeesService {
    /**
     * Get all employees
     * @param data The data for the request.
     * @param data.accept The content type that the client can understand.
     * @returns unknown A list of employees
     * @throws ApiError
     */
    public static getEmployees(data: GetEmployeesData): CancelablePromise<GetEmployeesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/employees',
            headers: {
                Accept: data.accept
            }
        });
    }
    
    /**
     * Create a new employee
     * @param data The data for the request.
     * @param data.formData
     * @param data.accept The content type that the client can understand.
     * @returns unknown Employee created
     * @throws ApiError
     */
    public static postEmployees(data: PostEmployeesData): CancelablePromise<PostEmployeesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/employees',
            headers: {
                Accept: data.accept
            },
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
}

export class CommentsService {
    /**
     * Get all comments for a specific task
     * @param data The data for the request.
     * @param data.task
     * @param data.accept The content type that the client can understand.
     * @returns unknown A list of comments
     * @throws ApiError
     */
    public static getTasksByTaskComments(data: GetTasksByTaskCommentsData): CancelablePromise<GetTasksByTaskCommentsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/tasks/{task}/comments',
            path: {
                task: data.task
            },
            headers: {
                Accept: data.accept
            }
        });
    }
    
    /**
     * Create a new comment
     * @param data The data for the request.
     * @param data.task
     * @param data.requestBody
     * @param data.accept The content type that the client can understand.
     * @returns unknown Comment created
     * @throws ApiError
     */
    public static postTasksByTaskComments(data: PostTasksByTaskCommentsData): CancelablePromise<PostTasksByTaskCommentsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/tasks/{task}/comments',
            path: {
                task: data.task
            },
            headers: {
                Accept: data.accept
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class TasksService {
    /**
     * Get all tasks
     * @param data The data for the request.
     * @param data.accept The content type that the client can understand.
     * @returns unknown A list of tasks
     * @throws ApiError
     */
    public static getTasks(data: GetTasksData): CancelablePromise<GetTasksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/tasks',
            headers: {
                Accept: data.accept
            }
        });
    }
    
    /**
     * Create a new task
     * @param data The data for the request.
     * @param data.requestBody
     * @param data.accept The content type that the client can understand.
     * @returns unknown New task created
     * @throws ApiError
     */
    public static postTasks(data: PostTasksData): CancelablePromise<PostTasksResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/tasks',
            headers: {
                Accept: data.accept
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Retrieve a single task by id
     * @param data The data for the request.
     * @param data.id
     * @param data.accept The content type that the client can understand.
     * @returns unknown detailed information about task
     * @throws ApiError
     */
    public static getTasksById(data: GetTasksByIdData): CancelablePromise<GetTasksByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/tasks/{id}',
            path: {
                id: data.id
            },
            headers: {
                Accept: data.accept
            }
        });
    }
    
    /**
     * Change status for a task
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @param data.accept The content type that the client can understand.
     * @returns unknown update status of task
     * @throws ApiError
     */
    public static putTasksById(data: PutTasksByIdData): CancelablePromise<PutTasksByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/tasks/{id}',
            path: {
                id: data.id
            },
            headers: {
                Accept: data.accept
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}